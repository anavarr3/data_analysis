select(ends_with("2"))
foreclosures_2022
transposed_foreclosures_2022 <- foreclosures_2022 |>
gather(Date, Value, -1) |>
spread(key = zip, value = Value) |>
mutate(month_year = as.yearmon(paste(Date, "01", sep = "_"), format="%B_%Y_%d"))
transposed_foreclosures_2022 <- foreclosures_2022 |>
gather(Date, Value, -1) |>
spread(key = zip, value = Value) |>
mutate(month_year = as.yearmon(paste(Date, "01", sep = "_"), format="%B_%Y_%d"))
final_foreclosures_2022 <- transposed_foreclosures_2022[, c(ncol(transposed_foreclosures_2022), 1:(ncol(transposed_foreclosures_2022)-1))] |>
select(-Date) |>
arrange(desc(month_year))
transposed_foreclosures_2022 <- foreclosures_2022 |>
gather(Date, Value, -1) |>
spread(key = zip, value = Value) |>
mutate(month_year = as.yearmon(paste(Date, "01", sep = "_"), format="%B_%Y_%d"))
final_foreclosures_2022 <- transposed_foreclosures_2022[, c(ncol(transposed_foreclosures_2022), 1:(ncol(transposed_foreclosures_2022)-1))] |>
select(-Date) |>
arrange(desc(month_year))
final_foreclosures_2022
transposed_foreclosures_2022 <- foreclosures_2022 |>
gather(Date, Value, -1) |>
spread(key = zip, value = Value) |>
mutate(month_year = as.yearmon(paste(Date, "01", sep = "_"), format="%B_%Y_%d"))
transposed_foreclosures_2022 <- foreclosures_2022 |>
gather(Date, Value, -1) |>
spread(key = zip, value = Value) |>
mutate(month_year = as.yearmon(paste(Date, "01", sep = "_"), format="%B_%Y_%d"))
transposed_foreclosures_2022
final_foreclosures_2022 <- transposed_foreclosures_2022[, c(ncol(transposed_foreclosures_2022), 1:(ncol(transposed_foreclosures_2022)-1))] |>
select(-Date) |>
arrange(desc(month_year))
final_foreclosures_2022
final_foreclosures_2022 <- transposed_foreclosures_2022[, c(ncol(transposed_foreclosures_2022), 1:(ncol(transposed_foreclosures_2022)-1))] |>
select(-Date) |>
arrange(month_year)
final_foreclosures_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
col_sum_2022_months
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(final_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))]
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(col_sum_2022_months), 1:(ncol(col_sum_2022_months)-1))]
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(col_sum_2022_months), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, col_sum_2022_months)
foreclosures_by_month_2022
rowSums(col_sum_2022_months[1,-1])
rowSums(col_sum_2022_months[1,-1])
rowSums(col_sum_2022_months[1,-1])
rowSums(foreclosures_by_month_2022[1,-1])
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(col_sum_2022_months), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, col_sum_2022_months)
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(final_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, col_sum_2022_months)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(final_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, col_sum_2022_months)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(col_sum_2022_months = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(col_sum_2022_months), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, col_sum_2022_months)
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- sum_of_notices[, c(ncol(sum_of_notices), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, col_sum_2022_months)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(col_sum_2022_months), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, col_sum_2022_months)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(col_sum_2022_months), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, sum_of_notices)
foreclosures_by_month_2022
#Okay, now that we've cleaned that up a bit, let's count the sum of the rows.
col_sum <- transposed_redo_arranged |>
mutate(sum_col = rowSums(transposed_redo_arranged[,-1]))
sum_arranged <- col_sum[, c(ncol(transposed_redo), 1:(ncol(col_sum)-1))]
#Now let's get rid of the extra columns and make a column for the average number of foreclosure notices for each date. However, I have not weighted it for population/households per zip.
average_foreclosures_month <- sum_arranged |>
mutate(average = (sum_col/552)) |>
select(month_year, sum_col, average) |>
arrange(desc(average))
average_foreclosures_month
#Okay, now that we've cleaned that up a bit, let's count the sum of the rows.
col_sum <- transposed_redo_arranged |>
mutate(sum_col = rowSums(transposed_redo_arranged[,-1]))
sum_arranged <- col_sum[, c(ncol(transposed_redo_arranged), 1:(ncol(col_sum)-1))]
#Okay, now that we've cleaned that up a bit, let's count the sum of the rows.
col_sum <- transposed_redo_arranged |>
mutate(sum_col = rowSums(transposed_redo_arranged[,-1]))
sum_arranged <- col_sum[, c(ncol(transposed_redo_arranged), 1:(ncol(col_sum)-1))]
sum_arranged
#Okay, now that we've cleaned that up a bit, let's count the sum of the rows.
col_sum <- transposed_redo_arranged |>
mutate(sum_col = rowSums(transposed_redo_arranged[,-1]))
sum_arranged <- col_sum[, c(ncol(transposed_redo), 1:(ncol(col_sum)-1))]
sum_arranged
View(final_foreclosures_2022)
View(final_foreclosures_2022)
knitr::opts_chunk$set(echo = TRUE)
# I want to compare the above chart to the overall pattern. Here I am just readjusting the transposed_redo data set so I can see the month_year column at the front and get rid of the original date column
transposed_redo_arranged <- transposed_redo[, c(ncol(transposed_redo), 1:(ncol(transposed_redo)-1))] |>
select(-Date)
transposed_redo_arranged
#Okay, now that we've cleaned that up a bit, let's count the sum of the rows. This first part stores the dataframe inside a new dataframe without the first column so we can add a column (mutate) that is the sum of all the other columns without pulling the date into the calculation.
col_sum <- transposed_redo_arranged |>
mutate(sum_col = rowSums(transposed_redo_arranged[,-1]))
#This next line creates a new dataframe, where we take our fresh one ^ and ask it to pull the new column from the end (sum_col) and place it at the front.
sum_arranged <- col_sum[, c(ncol(transposed_redo), 1:(ncol(col_sum)-1))]
sum_arranged
average_foreclosures_month <- sum_arranged |>
mutate(average = (sum_col/552)) |>
select(month_year, sum_col, average) |>
arrange(desc(average))
average_foreclosures_month
# Here I'm double checking that the first row is correct
rowSums(transposed_redo_arranged[1,-1])
ACS5 <- load_variables(2021, "acs5", cache = TRUE)
view(ACS5)
md <- get_acs(geography = "county",
variables = c(general_pop = "B02001_001E",
white_alone = "B02001_002E",
Black_or_AA = "B02001_003E"
),
state = "MD",
year = 2021)
md
# Here we created a separate dataframe focusing on 2021 and 2022 so we could parse through the data that qualifies for Question 4
twoyearforeclosures <- foreclosures |>
group_by(zip) |>
select(ends_with("1")|ends_with("2"))
twoyearforeclosures
foreclosures_2022 <- foreclosures |>
group_by(zip) |>
select(ends_with("2"))
foreclosures_2022
#Here we are transposing that 2022 data set to make it easier to add everything
transposed_foreclosures_2022 <- foreclosures_2022 |>
gather(Date, Value, -1) |>
spread(key = zip, value = Value) |>
mutate(month_year = as.yearmon(paste(Date, "01", sep = "_"), format="%B_%Y_%d"))
transposed_foreclosures_2022
# Now for the adding
final_foreclosures_2022 <- transposed_foreclosures_2022[, c(ncol(transposed_foreclosures_2022), 1:(ncol(transposed_foreclosures_2022)-1))] |>
select(-Date) |>
arrange(month_year)
col_sum <- transposed_redo_arranged |>
mutate(sum_col = rowSums(transposed_redo_arranged[,-1]))
sum_arranged <- col_sum[, c(ncol(transposed_redo), 1:(ncol(col_sum)-1))]
# Now for the adding
final_foreclosures_2022 <- transposed_foreclosures_2022[, c(ncol(transposed_foreclosures_2022), 1:(ncol(transposed_foreclosures_2022)-1))] |>
select(-Date) |>
arrange(month_year)
col_sum <- transposed_redo_arranged |>
mutate(sum_col = rowSums(transposed_redo_arranged[,-1]))
sum_arranged <- col_sum[, c(ncol(transposed_redo), 1:(ncol(col_sum)-1))]
sum_arranged
# Now for the adding
final_foreclosures_2022 <- transposed_foreclosures_2022[, c(ncol(transposed_foreclosures_2022), 1:(ncol(transposed_foreclosures_2022)-1))] |>
select(-Date) |>
arrange(month_year)
final_foreclosures_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(col_sum_2022_months), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, sum_of_notices)
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(final_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, sum_of_notices)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, sum_of_notices)
foreclosures_by_month_2022
rowSums(foreclosures_by_month_2022[1,-1])
rowSums(transposed_foreclosures_2022[1,-1])
rowSums(foreclosures_by_month_2022[1,-1])
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
#   geom_text(check_overlap = TRUE, size = 2, aes(label = month_year), hjust = 0.5, vjust = -0.5)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = "_") |>
select(month, sum_of_notices)
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = "_") |>
select(month, year, sum_of_notices)
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = " ") |>
select(month sum_of_notices)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = "") |>
select(month sum_of_notices)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
#  separate(month_year, into = c("month", "year"), sep = "") |>
select(month_year, sum_of_notices)
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = " ") |>
select(month, sum_of_notices)
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = " ") |>
select(month, sum_of_notices) |>
arrange(month)
foreclosures_by_month_2022
library(tidyverse)
library(dplyr)
library(janitor)
library(zoo)
library(ggplot2)
library(tidycensus)
library(lubridate)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = " ") |>
month(foreclosures_by_month_2022$month, label = TRUE, abbr = FALSE) |>
select(month, sum_of_notices) |>
arrange(month)
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = " ") |>
select(month, sum_of_notices) |>
foreclosures_by_month_2022
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
separate(month_year, into = c("month", "year"), sep = " ") |>
select(month, sum_of_notices)
foreclosures_by_month_2022
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
NOI <-month(foreclosures_by_month_2022$month), label = TRUE, abbr = FALSE)
NOI <-month(foreclosures_by_month_2022$Month), label = TRUE, abbr = FALSE)
NOI$Month <-month(foreclosures_by_month_2022$Month), label = TRUE, abbr = FALSE)
NOI_month <- month(foreclosures_by_month_2022$Month), label = TRUE, abbr = FALSE)
NOI_month <- month(foreclosures_by_month_2022$Month, label = TRUE, abbr = FALSE)
NOI
NOI_month <- month(foreclosures_by_month_2022$Month, label = TRUE, abbr = FALSE)
NOI_month
NOI_month <- month(foreclosures_by_month_2022$Month, label = TRUE, abbr = TRUE)
NOI_month
NOI_month <- month(foreclosures_by_month_2022$Month, label = TRUE, abbr = FALSE)
NOI_month
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
#  separate(month_year, into = c("month", "year"), sep = " ") |>
select(month_year, sum_of_notices)
foreclosures_by_month_2022
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
#   geom_text(check_overlap = TRUE, size = 2, aes(label = month_year), hjust = 0.5, vjust = -0.5)
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= factor(month_year), y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
#   geom_text(check_overlap = TRUE, size = 2, aes(label = month_year), hjust = 0.5, vjust = -0.5)
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, weight=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
#   geom_text(check_overlap = TRUE, size = 2, aes(label = month_year), hjust = 0.5, vjust = -0.5)
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= as.character(month_year), y=sum_of_notices)) +
scale_x_discrete(labels = format(as.Date(as.character(foreclosures_by_month_2022$month_year), "%Y-%m-%d"), "%b %Y")) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= as.character(month_year), y=sum_of_notices)) +
scale_x_discrete(labels = format(as.Date(as.character(foreclosures_by_month_2022$month_year), "%Y-%m-%d"), "%b %Y")) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= as.character(month_year), y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= as.character(month_year), y=sum_of_notices)) +
scale_x_discrete(labels = format(as.Date(as.character(foreclosures_by_month_2022$month_year), "%Y-%m-%d"), "%b %Y")) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= as.character(month_year), y=sum_of_notices)) +
scale_x_date(date_labels = "%b %Y", date_breaks = "1 month") +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= as.character(month_year), y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
col_sum_2022_months <- final_foreclosures_2022 |>
mutate(sum_of_notices = rowSums(final_foreclosures_2022[,-1]))
foreclosures_by_month_2022 <- col_sum_2022_months[, c(ncol(transposed_foreclosures_2022), 1:(ncol(col_sum_2022_months)-1))] |>
select(month_year, sum_of_notices)
foreclosures_by_month_2022
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= as.character(month_year), y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year), y=sum_of_notices)) +
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_date(date_labels = "%b %Y", date_breaks = "1 month") +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
# Time to chart
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
#NOI_month <- month(foreclosures_by_month_2022$Month, label = TRUE, abbr = FALSE)
#NOI_month
# Time to chart. I'm having trouble getting the ticks and month labels for this, and Chat GPT said it's because of the data type of the month_year column. We need to change that column to a date type using the first day of every month.
foreclosures_by_month_2022 |>
ggplot() +
geom_line(aes(x= month_year, y=sum_of_notices)) +
scale_x_continuous(breaks = 1:52) +
labs(
title="Intent to foreclose notices in Maryland across 2022",
x = "month",
y = "intent to foreclose notices issued",
caption = "Source: Office of Financial Regulation") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1))
